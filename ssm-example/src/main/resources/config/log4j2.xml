<?xml version="1.0" encoding="UTF-8"?>

<!--monitorInterval设置为每30秒检测此配置，不用重启项目更改日志配置-->
<configuration status="error" monitorInterval="30">

    <!--定义变量-->
    <Properties>
        <!--项目根文件夹路径-->
        <Property name="logPath">${web:rootDir}</Property>
    </Properties>

    <!--先定义所有的输出源-->
    <appenders>
        <!--输出到控制台-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--这个都知道是输出日志的格式-->
            <PatternLayout pattern="%d{yyyy-MM-dd  HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </Console>
        <!--文件会打印出所有信息，append为false时每次运行程序会自动清空，-->
        <File name="Test" fileName="${logPath}/ssm-test.log" append="false">
            <PatternLayout pattern="%d{yyyy-MM-dd  HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>

        <!--文件会不断打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="All" fileName="${logPath}/ssm.log" append="false"
                     filePattern="${logPath}/$${date:yyyy-MM}/ssm-%d{MM-dd-yyyy}-%i.log.gz">
            <PatternLayout pattern="%d{yyyy-MM-dd  HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="30M"/>
            </Policies>
            <!--限制 SizeBasedTriggeringPolicy中size超出后，只保留最新的max个存档-->
            <DefaultRolloverStrategy fileIndex="min" max="1000"/>
        </RollingFile>

        <!--WARN级别的日志-->
        <File name="Warn" fileName="${logPath}/ssm-error.log" append="false">
            <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>

        <!--mybatis日志-->
        <!--文件会不断打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="Mybatis" fileName="${logPath}/ssm-mybatis.log" append="false"
                     filePattern="${logPath}/$${date:yyyy-MM}-mybatis/ssm-mybatis-%d{MM-dd-yyyy}-%i.log.gz">
            <PatternLayout pattern="%d{yyyy-MM-dd  HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="30M"/>
            </Policies>
            <!--限制 SizeBasedTriggeringPolicy中size超出后，只保留最新的max个存档-->
            <DefaultRolloverStrategy fileIndex="min" max="1000"/>
        </RollingFile>
    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--建立一个默认的root的logger-->
        <root level="trace">
            <appender-ref ref="Console"/>
            <appender-ref ref="Test"/>
            <appender-ref ref="All"/>
            <appender-ref ref="Warn"/>
        </root>
        <!--自定义需要打日志的地方，com.stonedt.dao表示要打印的区域，additivity设置是否继承父Logger的输出源-->
        <logger name="com.stonedt.dao" level="trace" additivity="false">
            <appender-ref ref="Console"/>
            <appender-ref ref="Mybatis"/>
        </logger>
    </loggers>
</configuration>